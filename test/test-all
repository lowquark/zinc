#!/bin/bash

ZNC='../znc/znc'
ZNC_LUA_PATH='../znc/?.lua'

BENCH="$1"

FAILED="\033[38;5;9mFAILED\033[39m"
PASSED="\033[38;5;10mPASSED\033[39m"

export LUA_PATH=$ZNC_LUA_PATH

function test() {
  echo -ne "\033[38;5;8m"
  echo "znc $1 asm.s"
  echo -ne "\033[39m"

  eval $ZNC $1 asm.s >/dev/null 2>/dev/null
  RESULT=$?

  if [ $RESULT -ne 0 ]; then
    printf "%-30s $FAILED\n" "COMPILER RETURNED ERROR $RESULT"
    if [ "$BENCH" == "bench" ]; then
      echo "copying to bench"
      cp $1 bench.zn
    fi
    exit 1
  fi

  echo -ne "\033[38;5;8m"
  echo "gcc -g -m64 asm.s -o a.out"
  echo -ne "\033[39m"

  gcc -g -m64 asm.s -o a.out
  RESULT=$?

  if [ $RESULT -ne 0 ]; then
    printf "%-30s $FAILED\n" "ASSEMBLER RETURNED ERROR $RESULT"
    if [ "$BENCH" == "bench" ]; then
      echo "copying to bench"
      cp $1 bench.zn
    fi
    exit 1
  fi

  echo -ne "\033[38;5;8m"
  echo -e "./a.out"
  echo -ne "\033[39m"

  ./a.out
  RESULT=$?

  echo -ne "\033[39m"
  if [ $RESULT == $2 ]; then
    printf "%-30s $PASSED\n" "$1 -> $RESULT"
  else
    printf "%-30s $FAILED EXPECTED $2\n" "$1 -> $RESULT"
    if [ "$BENCH" == "bench" ]; then
      echo "copying to bench"
      cp $1 bench.zn
    fi
    exit 1
  fi
}

# TODO: Pick up where we left off

test 'src/basic-return.zn' 30
test 'src/basic-swap-0.zn' 0
test 'src/basic-swap-1.zn' 1
test 'src/if.zn' 7
test 'src/cmp.zn' 0
test 'src/structs.zn' 0
test 'src/binops.zn' 0
test 'src/unops.zn' 0
test 'src/multiple-return.zn' 25

rm -f a.out
rm -f asm.s

